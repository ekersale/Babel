#include "SCommandsValue.hh"

SCommandsValue::SCommandsValue()
{
  methodPtr[1] = &SCommandsValue::connect;
  methodPtr[2] = &SCommandsValue::subscribe;
  //methodPtr[3] = &SCommandsValue::authAnswer;
  methodPtr[4] = &SCommandsValue::nick;
  methodPtr[5] = &SCommandsValue::status;
  methodPtr[6] = &SCommandsValue::module;
  methodPtr[7] = &SCommandsValue::birth;
  methodPtr[8] = &SCommandsValue::surname;
  methodPtr[9] = &SCommandsValue::name;
  methodPtr[10] = &SCommandsValue::address;
  methodPtr[11] = &SCommandsValue::phone;
  //methodPtr[12] = &SCommandsValue::contactNick;
  //methodPtr[13] = &SCommandsValue::contactStatus;
  //methodPtr[14] = &SCommandsValue::contactBirth;
  //methodPtr[15] = &SCommandsValue::contactModule;
  //methodPtr[16] = &SCommandsValue::contactSurname;
  //methodPtr[17] = &SCommandsValue::contactName;
  //methodPtr[18] = &SCommandsValue::contactAddress;
  //methodPtr[19] = &SCommandsValue::contactPhone;
  methodPtr[20] = &SCommandsValue::addRequest;
  //methodPtr[21] = &SCommandsValue::addAnswer;
  methodPtr[22] = &SCommandsValue::removeRequest;
  //methodPtr[23] = &SCommandsValue::removeAnswer;
  methodPtr[24] = &SCommandsValue::call;
  //methodPtr[25] = &SCommandsValue::requestCall;
  methodPtr[26] = &SCommandsValue::requestAnswer;
  //methodPtr[27] = &SCommandsValue::callAnswer;
}

SCommandsValue::~SCommandsValue() {
}

void		SCommandsValue::connect(std::vector<char *> chars, std::vector<int> ints)
{
  std::cout << "test connect" << std::endl;
}

void		SCommandsValue::subscribe(std::vector<char *> chars, std::vector<int> ints)
{

}

void		SCommandsValue::nick(std::vector<char *> chars, std::vector<int> ints)
{

}

void		SCommandsValue::status(std::vector<char *> chars, std::vector<int> ints)
{

}

void		SCommandsValue::module(std::vector<char *> chars, std::vector<int> ints)
{

}

void		SCommandsValue::birth(std::vector<char *> chars, std::vector<int> ints)
{

}

void		SCommandsValue::surname(std::vector<char *> chars, std::vector<int> ints)
{

}

void		SCommandsValue::name(std::vector<char *> chars, std::vector<int> ints)
{

}

void		SCommandsValue::address(std::vector<char *> chars, std::vector<int> ints)
{

}

void		SCommandsValue::phone(std::vector<char *> chars, std::vector<int> ints)
{

}

void		SCommandsValue::addRequest(std::vector<char *> chars, std::vector<int> ints)
{

}

void		SCommandsValue::removeRequest(std::vector<char *> chars, std::vector<int> ints)
{

}

void		SCommandsValue::call(std::vector<char *> chars, std::vector<int> ints)
{

}

void		SCommandsValue::requestAnswer(std::vector<char *> chars, std::vector<int> ints)
{

}
